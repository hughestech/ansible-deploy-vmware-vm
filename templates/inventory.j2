[OSEv3:children]
masters
etcd
nodes 


[masters]
{% for item in groups['control'] %}
master{{loop.index}} openshift_ip={{hostvars[item].ansible_host}} ansible_ssh_host={{hostvars[item].ansible_host}} openshift_node_group_name='node-config-master-infra'
{% endfor %}
#openshift_node_groups=[{'name': 'node-config-master', 'labels': ['node-role.kubernetes.io/master=true']}, {'name': 'node-config-infra', 'labels': ['node-role.kubernetes.io/infra=true']}, {'name': 'node-config-compute', 'labels': ['node-role.kubernetes.io/compute=false']}]



[etcd]
{% for item in groups['workers'] %}
master{{loop.index}} openshift_ip={{hostvars[item].ansible_host}} ansible_ssh_host={{hostvars[item].ansible_host}}  openshift_node_group_name='node-config-master-infra'
{% endfor %}

[nodes]
{% for item in groups['workers'] %}
worker{{loop.index}} openshift_ip={{hostvars[item].ansible_host}} ansible_ssh_host={{hostvars[item].ansible_host}}  openshift_schedulable=true openshift_node_group_name="node-config-compute"
{% endfor %}
{% for item in groups['control'] %}
master{{loop.index}} openshift_ip={{hostvars[item].ansible_host}} ansible_ssh_host={{hostvars[item].ansible_host}}  openshift_node_group_name='node-config-master-infra'
{% endfor %}



[OSEv3:vars]
ansible_ssh_user={{ ssh_username }}
ansible_sudo=true
ansible_become=true
enable_excluders=False
enable_docker_excluder=False
ansible_service_broker_install=True
openshift_set_node_ip=true
containerized=True



#os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'
openshift_disable_check=disk_availability,docker_storage,memory_availability,docker_image_availability

#openshift_node_kubelet_args={'pods-per-core': ['10']}

#deployment_type=origin
openshift_deployment_type=origin



openshift_additional_repos=[{'id': 'centos-okd-ci', 'name': 'centos-okd-ci', 'baseurl' :'http://buildlogs.centos.org/centos/7/paas/x86_64/openshift-origin311/', 'gpgcheck' :'0', 'enabled' :'1'}]




#openshift_disable_check=package_version
#openshift_disable_check=docker_image_availability,docker_storage

openshift_release={{ openshift_release }}
openshift_image_tag={{ openshift_release }}
openshift_pkg_version="-3.11.0"
openshift_install_examples=true

openshift_management_install_management=True

#openshift_web_console_nodeselector={'region':'nodes'}




template_service_broker_selector={"region":"infra"}
openshift_metrics_image_version={{ openshift_release }}
openshift_logging_image_version={{ openshift_release }}
openshift_logging_elasticsearch_proxy_image_version="v1.0.0"
logging_elasticsearch_rollout_override=false
osm_use_cockpit=true

# Install CloudForms/ManagementIQ
openshift_management_install_management=true
# We have a default storage class that will take care of everything
openshift_management_storage_class=preconfigured

# Prometheus
#openshift_prometheus_namespace=openshift-metrics
#openshift_prometheus_node_selector={"region":"nodes"}
#openshift_prometheus_storage_kind=glusterfs 
#openshift_prometheus_storage_type=pvc
#openshift_prometheus_alertbuffer_storage_type=pvc
#openshift_prometheus_alertmanager_storage_type=pvc

# logging
openshift_logging_install_logging=false                       	 
openshift_logging_es_cluster_size=3  
openshift_logging_es_nodeselector={"region":"nodes"}           	 
openshift_logging_kibana_nodeselector={"region":"nodes"}
openshift_logging_curator_nodeselector={"region":"nodes"}
openshift_logging_fluentd_nodeselector={"region":"nodes"}
#openshift_logging_storage_kind=pvc

openshift_metrics_hawkular_hostname={{ dns.metrics }}

openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind':'HTPasswdPasswordIdentityProvider'}]
#openshift_master_htpasswd_file='/etc/origin/master/htpasswd'

openshift_public_hostname={{ dns.public_hostname }}
openshift_master_default_subdomain={{ dns.master_default_subdomain }}
openshift_hosted_registry_routehost=registry.{{ dns.apps }}

openshift_master_api_port=8443
openshift_master_console_port=8443

openshift_enable_service_catalog=true
ansible_service_broker_install=true


openshift_master_cluster_public_hostname={{ dns.public_hostname }}
# put certs in openshift/ansible/playbooks/common/private
# above path didnt work, so using full path
# see https://wiki.cac.washington.edu/display/infra/Extracting+Certificate+and+Private+Key+Files+from+a+.pfx+File for how to get correct cert files
#openshift_master_named_certificates=[{"certfile": "/home/user/git/sourcetopia/openshift-install/openshift/ansible/playbooks/common/private/certs/cert.pem", "keyfile": "/home/user/git/sourcetopia/openshift-install/openshift/ansible/playbooks/common/private/certs/key.pem", "cafile": "/home/user/git/sourcetopia/openshift-install/openshift/ansible/playbooks/common/private/certs/__topia_nz.ca-bundle"}]
#openshift_master_overwrite_named_certificates=true


#[nfs]
#k8s-ctl01.dev.topia.nz openshift_schedulable=true
